# 封装好制作窗口的类，但是不好用# pip install -i https://pypi.tuna.tsinghua.edu.cn/simple xxxx # 打包命令 pyinstaller xxxxxxxx --onefile --icon=xxxxxxxxxx from PyQt5.Qt import *import sysimport randomimport time##一个继承了QWidget的类class Window(QWidget) :    def __init__(self): #这一行self是指这个类本身，这个类的实例化对象        super().__init__()#super()是一个内置函数，它的作用是调用父类的一个方法,这里是调用父类的__init__方法        #判断使用哪种方式创建窗口        print("输入1         按回车————————————————自动生成默认窗口")        print("输入2         按回车————————————————手动生成自定义窗口")        print("输入其他数字    按回车————————————————程序退出")        self.way = int(input("请输入数字：            "))#way是一个变量，用来接收用户输入的数字        #判断使用哪种方式创建窗口        if self.way == 1:            self.defaultwindow()            #self.addlabel1()        elif self.way == 2:            self.manualsetui()            # 判断是否添加标签            print('________________________________________________________________________________')            print("输入1             按回车————————————————添加默认标签")            print("输入2             按回车————————————————是添加自定义标签")            print("输入其他数字       按回车————————————————————程序退出")            self.addlabel = int(input("请输入数字："))  # addlabel是一个变量，用来接收用户输入的数字            # 判断是否添加标签            if self.addlabel == 1:                self.addlabel1()            elif self.addlabel == 2:                self.addlabel2()            else:                print("输入错误，程序退出")                # 等待5秒后退出                prin("等待5秒后退出")                time.sleep(5)                exit()        else:            print("输入错误，程序退出")            #等待5秒后退出            print("等待5秒后退出")            time.sleep(5)            exit()    #定义一个生成默认窗口的方法    def defaultwindow(self):        #生成两个随机整数， 设置窗口的大小        self.resize(random.randint(300,500),random.randint(300,500))        self.setWindowTitle("默认窗口")        #设置窗口的背景颜色为为红色、橙色、黄色、绿色、青色、蓝色、紫色、白色、黑色的随机颜色        self.setStyleSheet("background-color:rgb(%d,%d,%d)"%(random.randint(0,255),random.randint(0,255),random.randint(0,255)))    #定义一个手动生成自定义窗口的方法    def manualsetui(self):#设置窗口的子控件、属性、布局        #用变量接收用户输入的宽度和高度        self.width = int(input("请输入要生成的窗口的宽度："))        self.height = int(input("请输入要生成的窗口的高度："))        #设置窗口的大小        self.resize(self.width,self.height)        #设置窗口的标题，用input输入，用变量接收，并限定为中文字符        print('________________________________________________________________________________')        self.setWindowTitle(input("请输入要生成的窗口的标题（可以是数字，汉字）："))        #提醒用户输入颜色        print('________________________________________________________________________________')        print("1是红色 2是绿色 3是蓝色 4是紫色 5是黄色 其他是白色")        # 设置窗口的颜色，用input输入，1是红色，2是绿色，3是蓝色，4是紫色，5是黄色，其他是白色        color = int(input("请输入要生成的窗口的颜色："))        if color == 1:            self.setStyleSheet("background-color:red;")        elif color == 2:            self.setStyleSheet("background-color:green;")        elif color == 3:            self.setStyleSheet("background-color:blue;")        elif color == 4:            self.setStyleSheet("background-color:purple;")        elif color == 5:            self.setStyleSheet("background-color:yellow;")        else:            self.setStyleSheet("background-color:white;")    #定义一个添加默认标签的方法    def addlabel1(self):        # 设计一个标签        self.label = QLabel(self)        # 生成两个随机数，用来设置标签的大小，范围是300-500        self.width = random.randint(300,500)        self.height = random.randint(300,500)        self.label.resize(self.width,self.height)        # 设置标签的内容        self.label.setText("hello world2")        # 设置标签的文字的大小        self.label.setStyleSheet("font-size:60px;")        # 让标签出现在随机的位置        a = random.randint(100,1000)        b = random.randint(100,1000)        self.label.move(a, b)    #定义一个添加自定义标签的方法    def addlabel2(self):        # 设计一个标签        self.label = QLabel(self)        # 设置标签的大小        self.label.resize(self.width,self.height)        # 设置标签的内容        self.label.setText(input("请输入标签的内容："))        # 设置标签的文字的大小        self.label.setStyleSheet("font-size:60px;")        # 设置标签在窗口的中央        self.label.setAlignment(Qt.AlignCenter)    #定义一个添加按钮的方法    def addbutton(self):        # 设计一个按钮        self.button = QPushButton(self)        # 设置按钮的大小        self.button.resize(100, 100)        # 设置按钮的文字        self.button.setText("按钮")        # 生成两个随机整数，用来设置按钮的位置        a = random.randint(100,1000)        b = random.randint(100,1000)        # 设置按钮的位置        self.button.move(a, b)